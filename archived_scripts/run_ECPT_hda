#!/bin/bash

POSITIONAL=()
qemu=~/qemu_ECPT/build/qemu-system-x86_64
log_name=ecpt.log
set -x 

# # important comment here: don't replace the semicolon with space. bash system will screw it up.
# # https://stackoverflow.com/questions/59314359/bash-script-execute-command-with-double-quotes-single-quotes-and-spaces
# qemu_arg+='"init=/bin/sh console=ttyS0,115200" '
# qemu_arg+="-d mmu -D mmu.log "
# qemu_arg+=""

bench_torun="graphbig_bfs_small.sh"
thp_config="always"
# START_COMMAND="./mem_test"
START_COMMAND="cd rethinkVM_bench; ./run_scripts/${bench_torun};"
EPILOGUE="sync; sleep 5; /shutdown;"
# each argument that should be neccesarily seperated by space should be in a sperate "" item. 
# every thing within the comment will be treated as pure literal.  
qemu_args=(
	"$qemu"
	"-kernel" "arch/x86/boot/bzImage" 
	"-m" "32768M"
	"-display" "none"
	"-boot" "c"
	# This is a simplified FS with only the necessary files for booting and benchmark for testing
	# Unfortunately, we didn't save the command to reach this status, so this is hard to be regenerated from source.
	# "-hda" "image_full.ext4"
	"-hda" "../image.ext4"
	"-icount" "shift=0"
	# "-hda" "../targets/ubuntu_22.04/image.ext4"
	# "-hda" "rootfs.ext4"
	# "-initrd" "ramdisk.img"
	"-serial" "stdio"
	"-append" "root=/dev/sda rw rootdelay=4 rootfstype=ext4 console=ttyS0,115200 earlyprintk=serial,ttyS0,115200 apic=verbose transparent_hugepage=${thp_config} init=/usr/bin/bash -- -c \"$START_COMMAND $EPILOGUE /usr/bin/bash\""
	# "-append" "init=/bin/sh console=ttyS0,115200 earlyprintk=serial,ttyS0,115200"
#	"-append" "init=/bin/sh console=ttyS0,115200 earlyprintk=dbgp"
    # "-nographic"
	)


while [[ $# -gt 0 ]]; do
  	key="$1"

  	case $key in
    	--gdb)
      		qemu_args+=("-s" "-S")
      		shift # past value
      		;;
		--mmu)
			qemu_args+=("-d" "mmu" "-D" "mmu.log")
      		shift # past value
      		;;
    	--default)
      		DEFAULT=YES
      		shift # past argument
      		;;
    	*)    # unknown option
      		POSITIONAL+=("$1") # save it in an array for later
      		shift # past argument
      		;;
  esac
done

tee_args+=("tee" "$log_name")


# the command printed below can be copied into bash command and run without modification
# printf '%q ' "${qemu_args[@]}" 
# # "|" needs to be %s. with %q it will printed with escape
# printf '%s ' "|" 
# printf '%q ' "${tee_args[@]}"
# echo

# "${qemu_args[@]}" | "${tee_args[@]}"

"${qemu_args[@]}" 2>&1 | "${tee_args[@]}"
